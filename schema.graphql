enum DeviceUpdateState {
    BACKGROUND_UPDATE_NOT_SUPPORTED
    TRANSFERING_UPDATE
    UPDATE_AUTHORIZED
    UPDATE_AVAILABLE
    UP_TO_DATE
}

enum LiveUpdateState {
    LIVE_UPDATE_NOT_SUPPORTED
    UPDATE_AVAILABLE
    UPDATE_INCOMPLETE
    UP_TO_DATE
}

interface DeviceIF {
    label: String!
    deviceType: String!
    id: String!
    homeId: String!
    lastStatusUpdate: String!
    updateState: DeviceUpdateState!    
    firmwareVersion: String!
    availableFirmwareVersion: String!
    lowBat: Boolean!
    routerModuleSupported: Boolean!
    routerModuleEnabled: Boolean!
    modelType: String!
    modelId: Int!
    oem: String!
    manufacturerCode: Int!
    serializedGlobalTradeItemNumber: String!
    configPending: Boolean!
    permanentlyReachable: Boolean!
    liveUpdateState: LiveUpdateState!
    functionalChannels: String!           # Placeholder for real structured type
    functionalChannelCount: String!       # Could be Map<String, Int> or JSON
    deviceOverheated: Boolean!
    deviceOverloaded: Boolean!
    deviceUndervoltage: Boolean!
    temperatureOutOfRange: Boolean!
    coProFaulty: Boolean!
    coProRestartNeeded: Boolean!
    coProUpdateFailure: Boolean!
}

type GenericDevice implements DeviceIF {
    label: String!
    deviceType: String!
    id: String!
    homeId: String!
    lastStatusUpdate: String!
    updateState: DeviceUpdateState!    
    firmwareVersion: String!
    availableFirmwareVersion: String!
    lowBat: Boolean!
    routerModuleSupported: Boolean!
    routerModuleEnabled: Boolean!
    modelType: String!
    modelId: Int!
    oem: String!
    manufacturerCode: Int!
    serializedGlobalTradeItemNumber: String!
    configPending: Boolean!
    permanentlyReachable: Boolean!
    liveUpdateState: LiveUpdateState!
    functionalChannels: String!           # Placeholder for real structured type
    functionalChannelCount: String!       # Could be Map<String, Int> or JSON
    deviceOverheated: Boolean!
    deviceOverloaded: Boolean!
    deviceUndervoltage: Boolean!
    temperatureOutOfRange: Boolean!
    coProFaulty: Boolean!
    coProRestartNeeded: Boolean!
    coProUpdateFailure: Boolean!

}


type ShutterContact implements DeviceIF {
    label: String!
    deviceType: String!
    id: String!
    homeId: String!
    lastStatusUpdate: String!
    updateState: DeviceUpdateState!    
    firmwareVersion: String!
    availableFirmwareVersion: String!
    lowBat: Boolean!
    routerModuleSupported: Boolean!
    routerModuleEnabled: Boolean!
    modelType: String!
    modelId: Int!
    oem: String!
    manufacturerCode: Int!
    serializedGlobalTradeItemNumber: String!
    configPending: Boolean!
    permanentlyReachable: Boolean!
    liveUpdateState: LiveUpdateState!
    functionalChannels: String!           # Placeholder for real structured type
    functionalChannelCount: String!       # Could be Map<String, Int> or JSON
    deviceOverheated: Boolean!
    deviceOverloaded: Boolean!
    deviceUndervoltage: Boolean!
    temperatureOutOfRange: Boolean!
    coProFaulty: Boolean!
    coProRestartNeeded: Boolean!
    coProUpdateFailure: Boolean!

    windowState: String!
}

enum ClimateControlDisplay {
    ACTUAL
    ACTUAL_HUMIDITY
    SETPOINT
}

type TemperatureHumiditySensorDisplay implements DeviceIF {
    label: String!
    deviceType: String!
    id: String!
    homeId: String!
    lastStatusUpdate: String!
    updateState: DeviceUpdateState!    
    firmwareVersion: String!
    availableFirmwareVersion: String!
    lowBat: Boolean!
    routerModuleSupported: Boolean!
    routerModuleEnabled: Boolean!
    modelType: String!
    modelId: Int!
    oem: String!
    manufacturerCode: Int!
    serializedGlobalTradeItemNumber: String!
    configPending: Boolean!
    permanentlyReachable: Boolean!
    liveUpdateState: LiveUpdateState!
    functionalChannels: String!           # Placeholder for real structured type
    functionalChannelCount: String!       # Could be Map<String, Int> or JSON
    deviceOverheated: Boolean!
    deviceOverloaded: Boolean!
    deviceUndervoltage: Boolean!
    temperatureOutOfRange: Boolean!
    coProFaulty: Boolean!
    coProRestartNeeded: Boolean!
    coProUpdateFailure: Boolean!

    temperatureOffset: Float!
    display: ClimateControlDisplay!
    actualTemperature: Float!
    humidity: Float!
    setPointTemperature: Float!
}

type Query {
    genericdevices: [GenericDevice]!
    genericdevices_filtered (deviceType_filter: String!): [GenericDevice]!
    
    shuttercontacts: [ShutterContact]!
    shuttercontacts_filtered (label_filter: String!): [ShutterContact]!
    ths_displays: [TemperatureHumiditySensorDisplay]
    ths_displays_filtered (label_filter: String!): [TemperatureHumiditySensorDisplay]
}
